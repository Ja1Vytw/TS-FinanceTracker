# Checklist Completo - Controle de Finan√ßas Pessoais

## BACKEND (Spring Boot + MongoDB)

### ‚úÖ J√° feito
- Estrutura Spring Boot criada
- Depend√™ncias configuradas (Spring, MongoDB, Security, JWT, Lombok, JUnit, Swagger)
- Modelos: User, Transacao, Categoria, Alerta
- Reposit√≥rios, servi√ßos e controllers REST
- Endpoints de autentica√ß√£o JWT (login/cadastro)
- Spring Security configurado (JWT, prote√ß√£o de rotas)
- Exporta√ß√£o/importa√ß√£o de dados (CSV/PDF)
- Dashboard e filtros
- Documenta√ß√£o Swagger/OpenAPI
- CORS habilitado
- Testes unit√°rios b√°sicos
- Projeto compila e roda com Java 21 e Maven
- Swagger liberado para acesso p√∫blico

### üö© O que falta/fazer
- Testar todos os fluxos de autentica√ß√£o e CRUD
- Validar regras de neg√≥cio (saldo, alertas, categorias customizadas)
- Garantir prote√ß√£o dos endpoints
- Ajustar mensagens de erro/valida√ß√µes se necess√°rio

### üí° Opcionais/Sugest√µes
- Testes automatizados mais completos
- Autentica√ß√£o social (Google, Facebook)
- Logs e monitoramento
- Documenta√ß√£o para usu√°rios finais
- Deploy em cloud (Heroku, Railway, AWS, etc.)
- CI/CD (GitHub Actions, etc.)

### üñ•Ô∏è Migrar para outro PC
- Instalar Java 21, Maven
- (Opcional) Plugin Lombok no IDE
- Ter acesso ao MongoDB Atlas
- Ajustar string de conex√£o se necess√°rio
- Rodar: mvn clean install && mvn spring-boot:run

---

## FRONTEND (React)

### ‚úÖ J√° feito
- Estrutura inicial criada (Vite + React)
- Organiza√ß√£o de pastas (api, components, pages, hooks, context)
- Integra√ß√£o com backend via Axios
- Contexto e hook de autentica√ß√£o
- P√°ginas de login/cadastro
- Navega√ß√£o com React Router
- Rotas privadas protegidas

### üö© O que falta/fazer
- Finalizar telas de dashboard, gr√°ficos e relat√≥rios
- Implementar upload de extrato banc√°rio (CSV)
- Integrar exporta√ß√£o de relat√≥rios (PDF/CSV)
- Melhorar UX/UI
- Testar integra√ß√£o completa com backend

### üí° Opcionais/Sugest√µes
- Dark mode
- Responsividade
- Testes automatizados (Jest, React Testing Library)
- Deploy em Vercel, Netlify, Railway, etc.
- Documenta√ß√£o de uso

### üñ•Ô∏è Migrar para outro PC
- Instalar Node.js (LTS)
- Rodar npm install
- Rodar npm run dev
- Ajustar vari√°veis de ambiente (ex: VITE_API_URL)

---

## GUIA DE DEPLOY

### Backend (Spring Boot)
1. Gere o jar: mvn clean package
2. Rode: java -jar target/backend-1.0-SNAPSHOT.jar
3. (Cloud) Suba para Heroku, Railway, AWS, etc. Configure vari√°veis de ambiente (MONGODB_URI, JWT_SECRET, etc.)

### Frontend (React)
1. Gere build: npm run build
2. Suba a pasta dist/ para Vercel, Netlify, Railway, etc.
3. Configure vari√°veis de ambiente (VITE_API_URL)

---

**D√∫vidas? Consulte o README ou pe√ßa ajuda ao dev respons√°vel!** 